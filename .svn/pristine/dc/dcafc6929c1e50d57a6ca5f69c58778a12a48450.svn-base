package provided.datapacket;

import provided.extvisitor.IExtVisitorCmd;
import provided.extvisitor.R;
import provided.extvisitor.P;

/**
 * A DataPacketAlgo command that is designed to work on a DataPacket&lt;D&gt; host.
 * <br>
 * This convenience class both simplifies the command code but also increase type safety by restricting the host type.
 * <br>
 * Usage:
 * <pre>
 * myDataPacketAlgo.addCmd(MyData.class, new ADataPacketAlgoCmd&lt;MyReturn, MyData, MyParam&gt;(){
 *     private static final long serialVersionUID = aGeneratedUIDvalue;
 *     
 *     public MyReturn apply(DataPacket&lt;MyData&gt; host, MyParam... params){
 *         // your code here
 *     }
 * }
 * </pre>
 * Note:  In Eclipse, the auto-generation of the implemented methods of this class does not work properly.
 * The concrete apply method below is replicated by the automatic method generator because it doesn't 
 * recognize that the method already exists and is final.  Luckily, a compiler error message gets generated
 * in the attempt to override a final method.   Simply delete the extraneous auto-generated method.
 * 
 * @author Stephen Wong (c) 2010
 *  *
 * @param <R> The return type
 * @param <D> The data type held by the host
 * @param <P> The input parameter type 
 * @param <A> The type of the adapter to the local model
 * @param <H> The type of datapacket host the command should coerce the given host into when dispatching to the abstract apply() method.
 *  *
 * ----------------------------------------------
 * Restricts command to hosts of type ADataPacket
 */
public abstract class ADataPacketAlgoCmd<R, D, P, A, H extends ADataPacket>
		implements IExtVisitorCmd<R, Class<?>, P, ADataPacket> {
	private static final long serialVersionUID = -5627902537609466988L;

	@SuppressWarnings("unchecked")
	public final <T extends IExtVisitorHost<Class<?>, ? super ADataPacket>> R apply(Class<?> index, T host,
			P... params) {
		return apply(index, (H) host, params);
	}

	public abstract R apply(Class<?> index, H host, @SuppressWarnings("unchecked") P... params);

	public abstract void setCmd2ModelAdpt(A cmd2ModelAdpt);
}
